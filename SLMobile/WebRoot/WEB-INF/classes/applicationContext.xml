<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:property-placeholder location="classpath:jdbc.properties"/>
	
<!-- c3p0 ios -->
	<bean id="iosDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass"><value>${jdbc.driverClassName}</value></property>
        <property name="jdbcUrl"><value>${jdbc.url}</value></property>
        <property name="user"><value>${jdbc.username}</value></property>
        <property name="password"><value>${jdbc.password}</value></property>  
        <property name="acquireIncrement"><value>5</value></property>
        <property name="idleConnectionTestPeriod"><value>60</value></property>
        <property name="checkoutTimeout"><value>1000</value></property>
        <property name="maxPoolSize"><value>15</value></property>
        <property name="minPoolSize"><value>2</value></property>
        <property name="maxStatements"><value>10</value></property>
        <property name="initialPoolSize"><value>2</value></property>
        <property name="maxIdleTime" value="60"></property>
	</bean>
	
	<!-- c3p0 SLzx -->
	<bean id="zxDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass"><value>${jdbc.driverClassName.zx}</value></property>
        <property name="jdbcUrl"><value>${jdbc.url.zx}</value></property>
        <property name="user"><value>${jdbc.username.zx}</value></property>
        <property name="password"><value>${jdbc.password.zx}</value></property>  
        <property name="acquireIncrement"><value>5</value></property>
        <property name="idleConnectionTestPeriod"><value>60</value></property>
        <property name="checkoutTimeout"><value>1000</value></property>
        <property name="maxPoolSize"><value>15</value></property>
        <property name="minPoolSize"><value>2</value></property>
        <property name="maxStatements"><value>10</value></property>
        <property name="initialPoolSize"><value>2</value></property>
        <property name="maxIdleTime" value="60"></property>
	</bean> 
	
	<!-- c3p0 SSO -->
	<bean id="ssoDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass"><value>${jdbc.driverClassName.SSO}</value></property>
        <property name="jdbcUrl"><value>${jdbc.url.SSO}</value></property>
        <property name="user"><value>${jdbc.username.SSO}</value></property>
        <property name="password"><value>${jdbc.password.SSO}</value></property>  
        <property name="acquireIncrement"><value>5</value></property>
        <property name="idleConnectionTestPeriod"><value>60</value></property>
        <property name="checkoutTimeout"><value>1000</value></property>
        <property name="maxPoolSize"><value>15</value></property>
        <property name="minPoolSize"><value>2</value></property>
        <property name="maxStatements"><value>10</value></property>
        <property name="initialPoolSize"><value>2</value></property>
        <property name="maxIdleTime" value="60"></property>
	</bean> 
	

	<bean id="iosSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="iosDataSource" />
		</property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath*:/com/sl/ios/entity/</value>
				<!-- <value>classpath*:/com/sl/chatPages/entity/</value> -->
			</list>
		</property>
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.SQLServerDialect
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="current_session_context_class">thread</prop>
			</props>
		</property>
	</bean>
	
	<bean id="zxSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="zxDataSource" />
		</property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath*:/com/sl/zx/entity/</value>
			</list>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.sl.zx.entity</value>
				<value>com.sl.sso.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.SQLServerDialect
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="current_session_context_class">thread</prop>
			</props>
		</property>
	</bean>
	
	<bean id="ssoSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="ssoDataSource" />
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.sl.sso.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.SQLServerDialect
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="current_session_context_class">thread</prop>
			</props>
		</property>
	</bean>
	
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="iosSessionFactory"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="merge*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
	</tx:advice>
	
	<aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut" expression="execution(* com.sl..service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>
    
    <bean id="zxTxManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="zxSessionFactory"></property>
	</bean>
	<tx:advice id="zxtxAdvice" transaction-manager="zxTxManager">
		<tx:attributes>
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="zxtxPointcut" expression="execution(* com.sl..service..*.*(..))" />
        <aop:advisor advice-ref="zxtxAdvice" pointcut-ref="zxtxPointcut"/>
        <aop:advisor advice-ref="ssotxAdvice" pointcut-ref="zxtxPointcut"/>
    </aop:config>
    
    <bean id="ssoTxManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="ssoSessionFactory"></property>
	</bean>
	<tx:advice id="ssotxAdvice" transaction-manager="ssoTxManager">
		<tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="merge*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
	</tx:advice>
    
    
    
    
    <!-- 初始化 -->
    <!-- 1.0 定时任务 目标bean - 初始化动作。 -->
	<bean id="initOnStart" class="com.sl.comUtil.InitOnStart"></bean>
    <!-- 2.0 要调用的目标对象的方法 -->
     <bean id="initMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="initOnStart" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" /> <!-- 是否并发执行 一次没完下一个不开始 -->
	</bean>
	<!-- 3.0 周期性的时间配置 -->
	<bean id="initTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="initMethod" />
		<property name="startDelay" value="1000" />  <!-- 启动延迟1秒 -->
		<property name="repeatInterval" value="1000" /> <!-- 任务执行的周期 -->
		<property name="repeatCount" value="1" />   <!-- 执行次数 -->
	 </bean>
    <!-- 总调度  -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="initTrigger" />
			</list>
		</property>
	</bean>  
	
</beans>